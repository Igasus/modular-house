// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ModularHouse.Server.DeviceManagement.Infrastructure.DataAccess.Database;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace ModularHouse.Server.DeviceManagement.Infrastructure.DataAccess.Database.Migrations
{
    [DbContext(typeof(PostgreSqlContext))]
    [Migration("20240113114432_Created_Routers")]
    partial class Created_Routers
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ModularHouse.Server.DeviceManagement.Domain.AreaAggregate.Area", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CreatedByUserId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<Guid>("LastUpdatedByUserId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("LastUpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CreatedByUserId");

                    b.HasIndex("LastUpdatedByUserId");

                    b.ToTable("Areas");
                });

            modelBuilder.Entity("ModularHouse.Server.DeviceManagement.Domain.DeviceAggregate.Device", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("AdditionDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Devices");
                });

            modelBuilder.Entity("ModularHouse.Server.DeviceManagement.Domain.RouterAggregate.Router", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("AreaId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("CreatedByUserId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<Guid>("DeviceId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("LastUpdatedByUserId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("LastUpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AreaId");

                    b.HasIndex("CreatedByUserId");

                    b.HasIndex("DeviceId")
                        .IsUnique();

                    b.HasIndex("LastUpdatedByUserId");

                    b.ToTable("Routers");
                });

            modelBuilder.Entity("ModularHouse.Server.DeviceManagement.Domain.UserAggregate.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("AdditionDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ModularHouse.Server.DeviceManagement.Domain.AreaAggregate.Area", b =>
                {
                    b.HasOne("ModularHouse.Server.DeviceManagement.Domain.UserAggregate.User", "CreatedByUser")
                        .WithMany("CreatedAreas")
                        .HasForeignKey("CreatedByUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ModularHouse.Server.DeviceManagement.Domain.UserAggregate.User", "LastUpdatedByUser")
                        .WithMany("LastUpdatedAreas")
                        .HasForeignKey("LastUpdatedByUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreatedByUser");

                    b.Navigation("LastUpdatedByUser");
                });

            modelBuilder.Entity("ModularHouse.Server.DeviceManagement.Domain.RouterAggregate.Router", b =>
                {
                    b.HasOne("ModularHouse.Server.DeviceManagement.Domain.AreaAggregate.Area", "Area")
                        .WithMany("Routers")
                        .HasForeignKey("AreaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ModularHouse.Server.DeviceManagement.Domain.UserAggregate.User", "CreatedByUser")
                        .WithMany("CreatedRouters")
                        .HasForeignKey("CreatedByUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ModularHouse.Server.DeviceManagement.Domain.DeviceAggregate.Device", "Device")
                        .WithOne("Router")
                        .HasForeignKey("ModularHouse.Server.DeviceManagement.Domain.RouterAggregate.Router", "DeviceId");

                    b.HasOne("ModularHouse.Server.DeviceManagement.Domain.UserAggregate.User", "LastUpdatedByUser")
                        .WithMany("LastUpdatedRouters")
                        .HasForeignKey("LastUpdatedByUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Area");

                    b.Navigation("CreatedByUser");

                    b.Navigation("Device");

                    b.Navigation("LastUpdatedByUser");
                });

            modelBuilder.Entity("ModularHouse.Server.DeviceManagement.Domain.AreaAggregate.Area", b =>
                {
                    b.Navigation("Routers");
                });

            modelBuilder.Entity("ModularHouse.Server.DeviceManagement.Domain.DeviceAggregate.Device", b =>
                {
                    b.Navigation("Router");
                });

            modelBuilder.Entity("ModularHouse.Server.DeviceManagement.Domain.UserAggregate.User", b =>
                {
                    b.Navigation("CreatedAreas");

                    b.Navigation("CreatedRouters");

                    b.Navigation("LastUpdatedAreas");

                    b.Navigation("LastUpdatedRouters");
                });
#pragma warning restore 612, 618
        }
    }
}
